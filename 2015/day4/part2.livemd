# Day 4 Part 2

```elixir
Mix.install([])
```

## Part 2

```elixir
defmodule Day4Part2 do
  def run(input) do
    find_answer(input, 0)
  end

  defp find_answer(input, current_number) do
    case encoded_hex_md5(input <> Integer.to_string(current_number)) do
      "000000" <> _rest ->
        current_number

      _md5 ->
        find_answer(input, current_number + 1)
    end
  end

  defp encoded_hex_md5(input) do
    :crypto.hash(:md5, input)
    |> Base.encode16(case: :lower)
  end
end
```

## Tests

```elixir
ExUnit.start(autorun: false)

defmodule MyTest do
  use ExUnit.Case, async: true

  alias Day4Part2

  test "examples" do
    assert Day4Part2.run("abcdef") === 6_742_839
    assert Day4Part2.run("pqrstuv") === 5_714_438
  end
end

ExUnit.run()
```

## Puzzle

```elixir
defmodule Puzzle do
  alias Day4Part2

  def run do
    input = File.read!("#{__DIR__}/part1-input.txt")

    Day4Part2.run(input)
  end
end

Puzzle.run()
```
